{
  "loadingYourSearch": "Loading your search... üéß",
  "cantJoinVoiceChannel": "I can't join the voice channel {{ user }}  $t(tryAgainLater)",
  "genericError": "Unable to handle your request. Please try again later.",
  "searchCancelled": "Search cancelled",
  "searchTimedOut": "Search timed out {{ user }} $t(tryAgainLater)",
  "tryAgainLater": "... try again ? ‚ùå",
  "invalidResponseForSong": "Invalid response, try a value between **1** and **{{max}}** or **cancel** $(tryAgainLater)",
  "defaultFooter": "Most intelligent bot in the word, made by ChristopherVR ‚ù§Ô∏è",
  "resultsFor": "Results for {{ song }}",
  "noResultsFound": "No results found {{ user }} $t(tryAgainLater)",
  "theSongToSearch": "The song name or URL to search for",
  "loadingPlaylist": "Loading your {{ value }}",
  "playlist": "playlist",
  "track": "track",
  "songIsBeingPlayed": "Song is being played",
  "volume": "volume",
  "noMusicCurrentlyPlaying": "No music currently player {{ user }} $t(tryAgainLater)",
  "volumeAlreadyTheSame": "The volume you want to change is already the current one {{ user }} $(tryAgainLater)",
  "volumeHasBeenModifiedTo": "The volume has been modified to ** {{ volume }} **/**100**%",
  "somethingWentWrong": "Something went wrong {{ user }}",
  "stop": "stop",
  "stopTrack": "Stops the current playing track",
  "musicStopped": "Music stopped, until next time ‚úÖ",
  "currentTrackSkipped": "Current track {{ title }} skipped ‚úÖ",
  "queueShuffled": "Queue shuffled **{{count}}** song(s) ‚úÖ",
  "noTrackInQueue": "No track in the queue after the current one",
  "shuffle": "shuffle",
  "shuffleTheTrack": "Shuffle the track",
  "seek": "seek",
  "skipBackAndForth": "Go to the previous song, or skip the next song",
  "timeToSkip": "Time that you want to skip to",
  "time": "time",
  "indicatedTimeIsTooHigh": "The indicated time is higher than the total time of the current track",
  "validSkipHint": "Try for example a valid time like **5s, 10s, 20 seconds, 1m**...*",
  "timeSetInCurrentTrack": "Time set on the current song **{{time}}**",
  "search": "search",
  "trackToSearch": "Searches for the track",
  "theSongYouWantToSearchFor": "The song you want to search for",
  "selectAChoiceBetween": "Select a choice between **1** to **{{count}}**, or **cancel**",
  "unableToJoinVoiceChannel": "Unable to join the voice channel. Please try again later.",
  "save": "save",
  "saveCurrentTrack": "Saves the current track",
  "duration": "Duration:",
  "songBy": "Song by:",
  "views": "Views",
  "songUrl": "Song URL:",
  "fromTheServer": "from the server",
  "sendTitleOfMusicAsPm": "The title of the music has been sent to your DM",
  "unableToSendPrivateMessage": "Unable to send you a private message",
  "resume": "resume",
  "playTheTrack": "Play the track",
  "trackAlreadyRunning": "The track is already running, {{ user }}",
  "currentMusicResumed": "Current track {{ title }} resumed ‚úÖ",
  "remove": "remove",
  "removeSongFromQueue": "Removes the song from the queue",
  "nameUrlToRemoveFromQueue": "the name (or URL) of the track you want to remove",
  "positionInQueue": "position in the queue the song is located",
  "useValidOptionToRemoveSong": "You have to use one of the options provided to remove a song",
  "removedSongFromQueue": "removed {{ track }} from the queue ‚úÖ",
  "couldNotFindTrack": "could not find {{ track }}",
  "couldNotFindTrackHint": " try using the url or the full name of the song",
  "queue": "queue",
  "getSongsFromQueue": "Get the songs in the queue",
  "severQueue": "Server queue -  {{ guild }} {{ value }}",
  "currentTrack": "Currnet {{ track }}\n\n {{ nextSongs}}",
  "playnext": "playnext",
  "songToPlayNext": "song you want to play next",
  "playlistsNotSupported": "This command does not support playlists",
  "trackInsertedIntoQueue": "Track has been inserted into the queue... it will play next üéß",
  "pause": "pause",
  "pauseTheCurrentTrack": "Pause the current track",
  "trackIsPaused": "Track is currently paused",
  "currentTrackPaused": "Current track {{ title }} is paused ‚úÖ",
  "nowplaying": "nowplaying",
  "viewWhatIsPlaying": "View what is currently playing",
  "saveThisTrack": "Save this track",
  "volumeUp": "Volume Up",
  "volumeDown": "Volume Down",
  "loop": "Loop",
  "resumeAndPause": "Resume & Pause",
  "nowPlayingDescription": "Volume **{{volume}}**\nDuration **{{duration}}**\nProgress {{progress}}\nLoop mode **{{mode}}**\nRequested by {{ user }}",
  "enableDisableLoopDescription": "Enable or disable looping of song or the whole queue",
  "whatActionToPerfomOnLoop": "The action that you can perform on the loop",
  "song": "Song",
  "repeatModeEnabled": "Repeat mode **enabled**. The whole queue will be repeated endlessly üîÅ.",
  "disableCurrentLoop": "You must first disable the current music in the loop mode (/loop Disable)",
  "repeatModeDisabled": "Repeat mode **disabled**.",
  "songRepeatMode": "Repeat mode **enabled** the current song will be repeated endlessly (you can end the loop with /loop disable)",
  "jump": "jump",
  "jumpDesc": "Jumps to particular track in the queue",
  "trackDoesNotExist": "This track does not exist.",
  "jumpedTo": "Jumped to {{ track }}",
  "filter": "filter",
  "filterToAddDesc": "Filter you want to add",
  "filterDoesNotExist": "This filter doesn't exist",
  "filterCurrentlyActive": "Filter currently active {{ activeFilter }}.\nList of available filters {{ filters}}.",
  "filterIsNow": "The filter {{ filter }} is now {{ status }}\nReminder the longer the music is, the longer this will take.",
  "controller": "controller",
  "setControllerChannel": "Set controller channel",
  "setTheChannelYouWantToSendTo": "The channel you want to send it to",
  "haveToSendToTextChannel": "You have to send it to a text channel",
  "back": "Back",
  "skip": "Skip",
  "controlMusicWithButtonsBelow": "control your music from the buttons below",
  "clear": "clear",
  "clearCommandDesc": "Clear all the music in the queue.",
  "queueCleared": "The queue has been cleared",
  "playingPreviousTrack": "Playing the **previous** track ‚úÖ"
}
